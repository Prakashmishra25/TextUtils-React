{"version":3,"sources":["components/Navbar.js","components/TextForms.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForms","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","defaultProps","Alert","alert","role","word","lower","charAt","slice","capitalize","message","App","setMode","setAlert","setTimeout","about","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.71567637.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n  <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode}type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    about: PropTypes.string\r\n  };\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here'\r\n  };\r\n\r\n\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForms(props) {\r\n    const handleUpClick= () =>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\" Converted to Uppercase!\", \"success\");\r\n    }\r\n    const handleLoClick= () =>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\" Converted to Lowercase!\", \"success\");\r\n    }\r\n    const handleOnChange= (event) =>{\r\n        // console.log(\"Onchange\");\r\n        setText(event.target.value)\r\n        \r\n    }\r\n    const handleClearClick=() =>{\r\n        let newText='';\r\n        setText(newText);\r\n        props.showAlert(\"Text cleared!\", \"success\");\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'grey'}}>\r\n            <h3>{props.heading}</h3>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'black'}}\r\n            onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            <button className=\"btn btn-primary my-3\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-success mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-warning\" onClick={handleClearClick}>Clear Text</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0? text : 'Enter something in the textbox sbove to preview it here'}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize= (word) =>{\r\n       const lower= word.toLowerCase();\r\n       return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.message}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from './components/Navbar';\nimport TextForms from './components/TextForms';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //Whether dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert= (message, type)=>{\n     setAlert({\n       message: message,\n       type: type\n     })\n     setTimeout(() => {\n       setAlert(null);\n     }, 2000);\n  }\n\n  const toggleMode= ()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor= '#1c3956';\n      showAlert(\" Dark mode has been enabled\", \"success\");\n      document.title= \"TextUtils-Dark mode\";\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor= 'white';\n      showAlert(\" Light mode has been enabled\", \"success\");\n      document.title= \"TextUtils-Light mode\";\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" about=\"About\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my=6\">\n      {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n          <TextForms showAlert={showAlert} heading=\"ENTER THE TEXT TO ANALYZE BELOW\" mode={mode}/>\n          {/* </Route> */}\n      {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}